/**
 * 
 */
package com.el.cmic.controller.inbound;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.PropertySource;
import org.springframework.core.env.Environment;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.serializer.SerializerFeature;
import com.el.cfg.domain.F4211;
import com.el.cfg.domain.F4311;
import com.el.cmic.common.domain.WmsData;
import com.el.cmic.common.domain.WmsRequest;
import com.el.cmic.common.domain.WmsResult;
import com.el.cmic.controller.OperationJdeController;
import com.el.cmic.domain.inbound.InboundPush;
import com.el.cmic.domain.inbound.InboundPushDetail;
import com.el.cmic.service.inbound.InboundService;
import com.el.utils.Base64Util;
import com.el.utils.HttpRequest;

/**
 * @author ELSIAN
 *
 */
@RestController
@RequestMapping("/inbound")
@PropertySource({"classpath:config/wms/testWMS.properties"})
public class InboundController implements OperationJdeController {

	@Autowired
	private Environment env;

	@Autowired
	InboundService inboundService;
	
	@RequestMapping("/")
	public String welcome() {
		return "Welcome to Test.";
	}
	
	@RequestMapping(value="/test", method=RequestMethod.GET)
	public List<String> test() {
		List<String> list = new ArrayList<String>();
		list.add("1st");
		list.add("test");
		list.add("测试1");
		return list;
	}

	@RequestMapping(value="/push", method=RequestMethod.POST, produces = { "application/json;charset=UTF-8" }  )
	public String pushtest() {
		WmsResult retWms = new WmsResult();
		try {
			boolean success = processPush();
			if (success) {
				retWms.setSuccess(true);
				retWms.setMessage("处理成功");
			} else {
				retWms.setSuccess(false);
				retWms.setMessage("处理失败");
			}
		} catch (Exception e) {
			//TODO
			retWms.setSuccess(false);
			retWms.setMessage("处理异常：" + e.getMessage());			
		}
		return retWms.toJson();
	}

	public WmsRequest Base64RequestData() {
		WmsData wms = new WmsData("入库推送", "JKWMS", inboundService.getInboundPushListWithDetails());
		String data = wms.toJson();
		data = Base64Util.encodeBase64(data);
		WmsRequest request = new WmsRequest(data);
		return request;
	}

	public boolean processPush() {
		Map<String,Object> result = this.sendPostRequest();
		WmsResult retWms = (WmsResult) result.get("result");
		List<InboundPush> list = (List<InboundPush>) result.get("list");
		Boolean success = retWms.isSuccess();
		if(success) {
			// update
			String flag = (list!=null && list.size()>0)?list.get(0).getFlag():"";
			if ("SO".equals(flag)) {
				// update F4211
				List<F4211> updList = new ArrayList<F4211>();
				for (InboundPush item : list) {
					if (item.getDetails() != null && item.getDetails().size() > 0) {
						for (InboundPushDetail detail : item.getDetails()) {
							F4211 row = new F4211();
							row.setSdkcoo(detail.getCo());
							row.setSddcto(detail.getDcto());
							row.setSddoco(detail.getDoco());
							row.setSdlnid(detail.getLnid().multiply(new BigDecimal(1000)));
							row.setSdlttr(detail.getNxtr());
							row.setSdnxtr("560");
							row.setSduser("JDEWMS");
							row.setSdpid("JDEWMS");
							row.setSdjobn("JDEWMS");
//							row.setSdupmj(DateUtil.);
//							row.setSdtday(DateUtil.);
							updList.add(row);
						}
					}
				}
				
				inboundService.updateF4211Status(updList);
			} else if ("OP".equals(flag)) {
				// update F4311
				List<F4311> updList = new ArrayList<F4311>();
				for (InboundPush item : list) {
					if (item.getDetails() != null && item.getDetails().size() > 0) {
						for (InboundPushDetail detail : item.getDetails()) {
							F4311 row = new F4311();
							row.setPdkcoo(detail.getCo());
							row.setPddcto(detail.getDcto());
							row.setPddoco(detail.getDoco());
							row.setPdsfxo("000");
							row.setPdlnid(detail.getLnid().multiply(new BigDecimal(1000)));
							row.setPdlttr(detail.getNxtr());
							row.setPdnxtr("560");
							row.setPduser("JDEWMS");
							row.setPdpid("JDEWMS");
							row.setPdjobn("JDEWMS");
//							row.setPdupmj(DateUtil.);
//							row.setPdtday(DateUtil.);
							updList.add(row);
						}
					}
				}
				
				inboundService.updateF4311Status(updList);
			}
			return true;
		} else {
			// failed
			return false;
		}
	}

	@Override
	public Map<String, Object> Base64Data() {
		List<InboundPush> list = inboundService.getInboundPushListWithDetails();
		WmsData wms = new WmsData("入库推送", "JKWMS", list);
		String data = wms.toJson();
		data = Base64Util.encodeBase64(data);
		WmsRequest request = new WmsRequest(data);
		Map<String, Object> map = new HashMap<String, Object>();
		map.put("request", request.toMap());
		map.put("list", list);
		return map;
	}

	@Override
	public Map<String, Object> sendPostRequest() {
		Map<String,Object> data = this.Base64Data();
		Map<String,Object> request = (Map<String,Object>) data.get("request");
		String url = this.env.getProperty("wms.Url");
		//TODO
		//String result = HttpRequest.sendPost(url, request);
		// Test Begin
		String result = "{\"success\":true,\"code\":\"1001\",\"message\":\"非法调用：时间戳与当前服务器时间差异过大\"}";
		result = Base64Util.encodeBase64(result);
		// Test End

		result = Base64Util.decodeBase64(result);
		WmsResult retWms = JSON.parseObject(result, WmsResult.class);
		Map<String,Object> retMap = new HashMap<String,Object>();
		retMap.put("result", retWms);
		retMap.put("list", data.get("list"));
		return retMap;
	}

	@Override
	public void operationJdeData() {
		processPush();
	}
}
