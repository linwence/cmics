package com.el.cmic.service.ckback;

import com.alibaba.fastjson.JSON;
import com.alibaba.fastjson.JSONObject;
import com.el.cmic.common.domain.WmsResult;
import com.el.cmic.domain.ckback.CkBackOrder;
import com.el.cmic.domain.ckback.CkBackOrderDtl;
import com.el.cmic.domain.ckback.CkBackSequence;
import com.el.cmic.mapper.ckback.CkBackMapper;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import java.util.List;

/**
 * Created by Vincent on 2016/10/26.
 */
@Service("ckBackServiceImpl")
public class CkBackServiceImpl implements CkBackService {
    @Autowired
    private CkBackMapper ckBackMapper;

    @Override
    @Transactional
    public WmsResult acceptData(String data) {
        WmsResult wmsResult = new WmsResult(true, "0000", "成功");

        /*JSONObject jsonObject = JSON.parseObject(data);

        CkBackOrder ckBackOrder = JSON.parseObject(data, CkBackOrder.class);
        String ojb = jsonObject.get("接口数据").toString();*/

        CkBackOrder ckBackOrder = JSON.parseObject(data, CkBackOrder.class);

        String flag = ckBackOrder.getFlag();
        if (flag.equals("SO")) {//销售出库/调拨出库、库存调整
            ckBackMapper.insertF47131(ckBackOrder);
            List<CkBackOrderDtl> ckBackOrderDtlList = ckBackOrder.getCkBackOrderDtlList();
            int rownum=0;
            for (CkBackOrderDtl ckBackOrderDtl : ckBackOrderDtlList
                    ) {
                rownum=rownum+1;
                ckBackMapper.insertF47132(ckBackOrder, ckBackOrderDtl,rownum);
                //打包流水号
                ckBackMapper.insertFE847132(ckBackOrder, ckBackOrderDtl,rownum);
                List<CkBackSequence> CkBackSequenceList = ckBackOrderDtl.getCkBackSequenceList();
                for (CkBackSequence ckBackSequence : CkBackSequenceList
                        ) {
                    ckBackMapper.updateFe8wms04(ckBackOrder, ckBackOrderDtl, ckBackSequence);
                }
            }

        } else if (flag.equals("OP")) {//采退出库
            ckBackMapper.insertF47071(ckBackOrder);
            List<CkBackOrderDtl> ckBackOrderDtlList = ckBackOrder.getCkBackOrderDtlList();
            int rownum=0;
            for (CkBackOrderDtl ckBackOrderDtl : ckBackOrderDtlList
                    ) {
                rownum=rownum+1;
                ckBackMapper.insertF47072(ckBackOrder, ckBackOrderDtl,rownum);
                List<CkBackSequence> CkBackSequenceList = ckBackOrderDtl.getCkBackSequenceList();
                for (CkBackSequence ckBackSequence : CkBackSequenceList
                        ) {
                    ckBackMapper.updateFe8wms04(ckBackOrder, ckBackOrderDtl, ckBackSequence);
                }
            }
        } else if (flag.equals("IA")) {

            List<CkBackOrderDtl> ckBackOrderDtlList = ckBackOrder.getCkBackOrderDtlList();
            for (CkBackOrderDtl ckBackOrderDtl : ckBackOrderDtlList
                    ) {
                ckBackMapper.insertFe8wms05(ckBackOrder, ckBackOrderDtl);
                List<CkBackSequence> CkBackSequenceList = ckBackOrderDtl.getCkBackSequenceList();
                for (CkBackSequence ckBackSequence : CkBackSequenceList
                        ) {
                    ckBackMapper.updateFe8wms04(ckBackOrder, ckBackOrderDtl, ckBackSequence);
                }
            }
        }
        return wmsResult;

    }
}
