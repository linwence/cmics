<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN" "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd" >
<generatorConfiguration>
    <!-- 引入配置文件 -->
    <properties resource="config/devdb.properties"/>

    <!-- 指定数据连接驱动jar地址 -->
    <classPathEntry location="D:\libs\ojdbc6-11.2.0.1.0.jar" />

    <!-- 一个数据库一个context -->
    <context id="ELJAVA">
        <!-- 注释 -->
        <commentGenerator >
            <property name="suppressAllComments" value="true"/><!-- 是否取消注释 -->
            <property name="suppressDate" value="true" /> <!-- 是否生成注释代时间戳-->
        </commentGenerator>

        <!-- jdbc连接 -->
        <jdbcConnection driverClass="${jdbc.driver}"
                        connectionURL="${jdbc.url}" userId="${jdbc.username}"
                        password="${jdbc.jdePassword}" />

        <!-- 类型转换 -->
        <javaTypeResolver>
            <!-- 是否使用bigDecimal， false可自动转化以下类型（Long, Integer, Short, etc.） -->
            <property name="forceBigDecimals" value="true"/>

        </javaTypeResolver>

        <!-- 生成实体类地址 -->
        <javaModelGenerator targetPackage="com.el.cfg.domain"
                            targetProject="src/main/java" >
            <!-- 是否在当前路径下新加一层schema,eg：fase路径com.oop.eksp.user.model， true:com.oop.eksp.user.model.[schemaName] -->
            <property name="enableSubPackages" value="false"/>
            <!-- 是否针对string类型的字段在set的时候进行trim调用 -->
            <property name="trimStrings" value="true"/>
        </javaModelGenerator>

        <!-- 生成mapxml文件 -->
        <sqlMapGenerator targetPackage="com.el.cfg.mapper"
                         targetProject="src/main/java" >
            <!-- 是否在当前路径下新加一层schema,eg：fase路径com.oop.eksp.user.model， true:com.oop.eksp.user.model.[schemaName] -->
            <property name="enableSubPackages" value="false" />
        </sqlMapGenerator>

        <!-- 生成mapxml对应client，也就是接口dao -->
        <javaClientGenerator targetPackage="com.el.cfg.mapper"
                             targetProject="src/main/java" type="ANNOTATEDMAPPER" >
            <!-- 是否在当前路径下新加一层schema,eg：fase路径com.oop.eksp.user.model， true:com.oop.eksp.user.model.[schemaName] -->
            <property name="enableSubPackages" value="false" />
        </javaClientGenerator>



        <!-- 配置表信息 -->
        <table schema="${schema}" tableName="F4101"
               domainObjectName="F4101" enableCountByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false"
               enableUpdateByExample="false">
            <!-- schema即为数据库名 tableName为对应的数据库表 domainObjectName是要生成的实体类 enable*ByExample   
                是否生成 example类   -->

            <!-- 忽略列，不生成bean 字段 -->
           <!-- <ignoreColumn column="FRED" />-->
            <!-- 指定列的java数据类型 -->
            <columnOverride column="all" javaType="java.lang.String" jdbcType="NCHAR" />
        </table>
        <table schema="${schema}" tableName="FE84101"
               domainObjectName="FE84101" enableCountByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false"
               enableUpdateByExample="false">
            <!-- schema即为数据库名 tableName为对应的数据库表 domainObjectName是要生成的实体类 enable*ByExample
                是否生成 example类   -->

            <!-- 忽略列，不生成bean 字段 -->
            <!-- <ignoreColumn column="FRED" />-->
            <!-- 指定列的java数据类型 -->
            <columnOverride column="String" jdbcType="NCHAR" />
        </table>
        <table schema="${schema}" tableName="FE84101Z"
               domainObjectName="FE84101Z" enableCountByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false"
               enableUpdateByExample="false">
            <!-- schema即为数据库名 tableName为对应的数据库表 domainObjectName是要生成的实体类 enable*ByExample
                是否生成 example类   -->

            <!-- 忽略列，不生成bean 字段 -->
            <!-- <ignoreColumn column="FRED" />-->
            <!-- 指定列的java数据类型 -->
            <columnOverride column="LONG_VARCHAR_FIELD" jdbcType="VARCHAR" />
        </table>

        <table schema="${schema}" tableName="F0101"
               domainObjectName="F0101" enableCountByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false"
               enableUpdateByExample="false">
            <!-- schema即为数据库名 tableName为对应的数据库表 domainObjectName是要生成的实体类 enable*ByExample
                是否生成 example类   -->

            <!-- 忽略列，不生成bean 字段 -->
            <!-- <ignoreColumn column="FRED" />-->
            <!-- 指定列的java数据类型 -->
            <columnOverride column="LONG_VARCHAR_FIELD" jdbcType="VARCHAR" />
        </table>
        <table schema="${schema}" tableName="FE80101"
               domainObjectName="FE80101" enableCountByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false"
               enableUpdateByExample="false">
            <!-- schema即为数据库名 tableName为对应的数据库表 domainObjectName是要生成的实体类 enable*ByExample
                是否生成 example类   -->

            <!-- 忽略列，不生成bean 字段 -->
            <!-- <ignoreColumn column="FRED" />-->
            <!-- 指定列的java数据类型 -->
            <columnOverride column="LONG_VARCHAR_FIELD" jdbcType="VARCHAR" />
        </table>
        <table schema="${schema}" tableName="F0116"
               domainObjectName="F0116" enableCountByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false"
               enableUpdateByExample="false">
            <!-- schema即为数据库名 tableName为对应的数据库表 domainObjectName是要生成的实体类 enable*ByExample
                是否生成 example类   -->

            <!-- 忽略列，不生成bean 字段 -->
            <!-- <ignoreColumn column="FRED" />-->
            <!-- 指定列的java数据类型 -->
            <columnOverride column="LONG_VARCHAR_FIELD" jdbcType="VARCHAR" />
        </table>

        <table schema="${schema}" tableName="FE80101Z"
               domainObjectName="FE80101Z" enableCountByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false"
               enableUpdateByExample="false">
            <!-- schema即为数据库名 tableName为对应的数据库表 domainObjectName是要生成的实体类 enable*ByExample
                是否生成 example类   -->

            <!-- 忽略列，不生成bean 字段 -->
            <!-- <ignoreColumn column="FRED" />-->
            <!-- 指定列的java数据类型 -->
            <columnOverride column="LONG_VARCHAR_FIELD" jdbcType="VARCHAR" />
        </table>
        <table schema="${schema}" tableName="FE841002"
               domainObjectName="FE841002" enableCountByExample="false"
               enableDeleteByExample="false" enableSelectByExample="false"
               enableUpdateByExample="false">
            <!-- schema即为数据库名 tableName为对应的数据库表 domainObjectName是要生成的实体类 enable*ByExample
                是否生成 example类   -->

            <!-- 忽略列，不生成bean 字段 -->
            <!-- <ignoreColumn column="FRED" />-->
            <!-- 指定列的java数据类型 -->
            <columnOverride column="LONG_VARCHAR_FIELD" jdbcType="VARCHAR" />
        </table>

    </context>
</generatorConfiguration>  